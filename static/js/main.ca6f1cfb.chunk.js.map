{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","jokes","setJokes","React","seconds","setSeconds","getJokes","a","axios","get","userJokes","data","console","error","message","useEffect","setTimeout","className","setup","punchline","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PA6CeA,EAzCH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BC,IAAMH,SAAS,IAA7C,mBAAOI,EAAP,KAAgBC,EAAhB,KAEMC,EAAQ,uCAAG,4BAAAC,EAAA,+EAEWC,IAAMC,IAAI,qDAFrB,OAEPC,EAFO,OAIbR,EAASQ,EAAUC,MACnBN,EAAW,IALE,gDAObO,QAAQC,MAAM,KAAIC,SAPL,yDAAH,qDA4Bd,OAjBAC,qBAAW,WACTT,MACA,IAEFS,qBAAU,WACLX,EAAU,GACXY,YAAW,kBAAIX,EAAWD,EAAU,KAAG,OAEzC,CAACA,IAEHW,qBAAU,WACO,IAAZX,GACDE,MAEF,CAACF,IAID,sBAAKa,UAAU,QAAf,UACE,0CAAab,KACf,qBAAIa,UAAU,eAAd,oBAAqChB,EAAMiB,SACzC,oBAAGD,UAAU,mBAAb,wBAA4ChB,EAAMkB,eAHxBlB,EAAMmB,KCzBvBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ca6f1cfb.chunk.js","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport axios from 'axios'\nimport './App.css'\n\nconst App = () => {\n  const [jokes, setJokes] = useState('');\n  const [seconds, setSeconds] = React.useState(20);\n\n  const getJokes = async () => {\n    try {\n      const userJokes = await axios.get(\"https://official-joke-api.appspot.com/random_joke\")\n      \n      setJokes(userJokes.data);\n      setSeconds(20);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect( () => {\n    getJokes();\n  },[]);\n  \n  useEffect(()=>{\n    if(seconds > 0){\n      setTimeout(()=>setSeconds(seconds - 1),1000);\n    }\n  },[seconds]);\n  \n  useEffect(()=>{\n    if(seconds === 0){\n      getJokes()\n    }\n  },[seconds])\n    \n\n  return (\n    <div className='jokes' key={jokes.id}>\n      <h1>Counter:{seconds}</h1>\n    <h3 className='jokes__setup'>Setup: {jokes.setup}</h3>\n      <p className='jokes__punchline'>Punchline: {jokes.punchline}</p>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}